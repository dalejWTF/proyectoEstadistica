/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import multipanel.*;

/**
 *
 * @author danie
 */
public class frmSubjetiva extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form frmObjetiva
     */
    
    //Paneles necesarios para implementar
    
    jpanelEsAD panelAD = new jpanelEsAD();
    jpanelGeAD panelGAD = new jpanelGeAD();
    jpanelNeg panelNeg = new jpanelNeg();
    jpanelEMUL panelEMUL= new jpanelEMUL();
    jpanelGMUL panelGMUL= new jpanelGMUL();
    
    public frmSubjetiva() {
        initComponents();
        setLocationRelativeTo(null);
        activarActionListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ReglasSubjetivas = new javax.swing.ButtonGroup();
        jpContenedor = new javax.swing.JPanel();
        jpTipos = new javax.swing.JPanel();
        rbEsAD = new javax.swing.JRadioButton();
        rbGAD = new javax.swing.JRadioButton();
        rbEMUL = new javax.swing.JRadioButton();
        rbGMUL = new javax.swing.JRadioButton();
        rbComNeg = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpContenedor.setLayout(new java.awt.BorderLayout());

        jpTipos.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));

        ReglasSubjetivas.add(rbEsAD);
        rbEsAD.setText("Regla Especial de Adición");
        jpTipos.add(rbEsAD);

        ReglasSubjetivas.add(rbGAD);
        rbGAD.setText("Regla General de Adición");
        jpTipos.add(rbGAD);

        ReglasSubjetivas.add(rbEMUL);
        rbEMUL.setText("Regla Especial de Multiplicación");
        jpTipos.add(rbEMUL);

        ReglasSubjetivas.add(rbGMUL);
        rbGMUL.setText("Regla General de Multiplicación");
        jpTipos.add(rbGMUL);

        ReglasSubjetivas.add(rbComNeg);
        rbComNeg.setText("Regla de Complemento o Negación");
        jpTipos.add(rbComNeg);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpTipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(292, 292, 292))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 390, Short.MAX_VALUE)
                .addComponent(jpContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );

        jpTipos.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmSubjetiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmSubjetiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmSubjetiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmSubjetiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmSubjetiva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ReglasSubjetivas;
    private javax.swing.JPanel jpContenedor;
    private javax.swing.JPanel jpTipos;
    private javax.swing.JRadioButton rbComNeg;
    private javax.swing.JRadioButton rbEMUL;
    private javax.swing.JRadioButton rbEsAD;
    private javax.swing.JRadioButton rbGAD;
    private javax.swing.JRadioButton rbGMUL;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {

        Object evt = e.getSource();
        if (evt.equals(rbEsAD)) {
            activarEAD();
        } else if (evt.equals(rbGAD)) {
            activarGAD();
        } else if (evt.equals(rbComNeg)) {
            activarNeg();
        }else if (evt.equals(rbEMUL)) {
            activarEMUL();
        }else if (evt.equals(rbGMUL)){
            activarGMUL();
        }
    }
    // =================================================================    Activacion de RadioButtons para vereficacion     =================================================================
    public void activarActionListener() {
        rbEsAD.addActionListener(this);
        rbGAD.addActionListener(this);
        rbEMUL.addActionListener(this);
        rbGMUL.addActionListener(this);
        rbComNeg.addActionListener(this);
    }

    
    // =================================================================    Activacion de paneles     =================================================================
    
    public void activarEAD() {     
        jpContenedor.add(panelAD);
        panelAD.setVisible(true);
        panelGAD.setVisible(false);
        panelNeg.setVisible(false);
        panelEMUL.setVisible(false);
        panelGMUL.setVisible(false);
    }

    public void activarGAD() {
        jpContenedor.add(panelGAD);
        panelGAD.setVisible(true);
        panelAD.setVisible(false);
        panelNeg.setVisible(false);
        panelEMUL.setVisible(false);
        panelGMUL.setVisible(false);
    }
    
    public void activarNeg() {
        jpContenedor.add(panelNeg);
        panelNeg.setVisible(true);
        panelGAD.setVisible(false);
        panelAD.setVisible(false);
        panelEMUL.setVisible(false);
        panelGMUL.setVisible(false);
    }
    
    public void activarEMUL() {
        jpContenedor.add(panelEMUL);
        panelEMUL.setVisible(true);
        panelNeg.setVisible(false);
        panelGAD.setVisible(false);
        panelAD.setVisible(false);
        panelGMUL.setVisible(false);
    }
    
    public void activarGMUL() {
        jpContenedor.add(panelGMUL);
        panelGMUL.setVisible(true);
        panelEMUL.setVisible(false);
        panelNeg.setVisible(false);
        panelGAD.setVisible(false);
        panelAD.setVisible(false);
    }
}
